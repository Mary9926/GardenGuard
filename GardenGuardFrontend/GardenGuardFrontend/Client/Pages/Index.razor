@page "/"
@implements IDisposable
@inject HttpClient client

<PageTitle>Index</PageTitle>

<div class="background"></div>
<div class="content">
    <MudGrid Justify="Justify.Center" Class="m-0 p-5 w-100">

        <MudItem xs="0" md="2" Class="p-0"></MudItem>
        <MudItem xs="12" md="8">
            <MudText Typo="Typo.h5" Class="text-white">Welcome</MudText>
            <MudText Typo="Typo.h6" Class="text-white">Check your sensors' results</MudText>
        </MudItem>
        <MudItem xs="0" md="2" Class="p-0"></MudItem>

        <MudItem xs="6" md="4">
            <div class="card">
                <MudIcon Icon="@Icons.Material.Filled.DeviceThermostat" Class="pb-2" Style="fill: #48A25F !important; font-size: 2.6rem;"></MudIcon>
                <MudText Typo="Typo.h6">Temperature</MudText>
                <MudText Typo="Typo.h5"><b>@(Sensor is null ? "..." : Sensor.Temperature.ToString()) °C</b></MudText>
            </div>
        </MudItem>
        <MudItem xs="6" md="4">
            <div class="card">
                <MudIcon Icon="@Icons.Material.Filled.WaterDrop" Class="pb-2" Style="fill: #48A25F !important; font-size: 2.6rem;"></MudIcon>
                <MudText Typo="Typo.h6">Humididty</MudText>
                <MudText Typo="Typo.h5"><b>@(Sensor is null ? "..." : Sensor.Humidity.ToString()) %</b></MudText>
            </div>
        </MudItem>

        @if (showTemperatureAlert)
        {
            <MudItem xs="12" md="8">
                <MudAlert Severity="Severity.Error" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true"
                      CloseIconClicked="(() => CloseMe(true))">Temperature is too hight please adjust it!</MudAlert>
            </MudItem>
        }
        @if (showHumididtyAlert)
        {
            <MudItem xs="12" md="8">
                <MudAlert Severity="Severity.Error" ContentAlignment="HorizontalAlignment.Center" ShowCloseIcon="true"
                      CloseIconClicked="(() => CloseMe(false))">Humidity is too hight please adjust it!</MudAlert>
            </MudItem>
        }
    </MudGrid>
</div>

@code
{
    private readonly string DeviceId = "ESP_001";

    public SensorData? Sensor { get; set; }
    private Timer? _timer = null;

    private bool showTemperatureAlert = false;
    private bool showHumididtyAlert = false;

    private int maxTemperature = 25;
    private int maxHumididty = 80;

    protected override void OnInitialized()
    {
        _timer = new Timer(DoWork, null, TimeSpan.Zero, TimeSpan.FromSeconds(60));
    }

    private void DoWork(object? state)
    {
        _ = RefreshSensorsData();
    }

    private async Task RefreshSensorsData()
    {
        Sensor = await client.GetFromJsonAsync<SensorData>($"/api/sensor/{DeviceId}");
        ShowAlerts();
        StateHasChanged();
    }

    public void Dispose()
    {
        _timer?.Dispose();
    }

    private void CloseMe(bool value)
    {
        if (value)
            showTemperatureAlert = false;
        else
            showHumididtyAlert = false;
    }

    private void ShowAlerts()
    {
        showTemperatureAlert = Sensor is not null && Sensor.Temperature > maxTemperature;
        showHumididtyAlert = Sensor is not null && Sensor.Humidity > maxHumididty;
    }

}
